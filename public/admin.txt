<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Recipe Manager</title>
    <link rel="stylesheet" href="css/styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background-color: #FFF5F5;
        }

        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
        }

        /* Header */
        .header {
            background-color: #e179bfd9;
            padding: 0.5rem 0;
            position: relative;
            height: 80px;
            display: flex;
            align-items: center;
        }

        .header-content {
            display: flex;
            align-items: center;
            justify-content: space-between;
            width: 100%;
        }

        .logo {
            text-decoration: none;
            font-size: 2.5rem;
            font-weight: 700;
            color: white;
            position: relative;
            background-color: transparent;
            padding: 0.5rem 1rem;
            box-shadow: none;
            z-index: 10;
            text-align: center;
            line-height: 1;
            display: flex;
            align-items: center;
            transform: none;
            left: 0;
            bottom: 0;
        }

        .logo img {
            width: 40px;
            margin-right: 10px;
            vertical-align: middle;
        }

        .nav-links {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            gap: 1rem;
        }

        #authButtons {
            display: flex;
            gap: 1rem;
        }

        #guestButtons, #userButtons {
            display: flex;
            gap: 1rem;
        }

        .btn {
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 50px;
            cursor: pointer;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
            font-size: 1rem;
        }

        .btn:hover {
            transform: scale(1.05);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .btn-primary {
            background-color: #e179bfd9;
            color: white;
        }

        .btn-secondary {
            background-color: #5D4037;
            color: white;
        }

        .btn-danger {
            background-color: #C62828;
            color: white;
        }

        /* Auth container styles */
        .auth-container {
            max-width: 1000px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 20px;
            border: 3px dashed #fff0f6;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            padding: 2rem;
            margin: 3rem auto;
            width: 90%;
        }

        .auth-container h2 {
            font-size: 2rem;
            color: #e179bfd9;
            margin-bottom: 1.5rem;
            text-align: center;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .auth-container h3 {
            font-size: 1.5rem;
            color: #5D4037;
            margin-bottom: 1rem;
            border-bottom: 2px dashed #FFD1DC;
            padding-bottom: 0.5rem;
        }

        .auth-form {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
            margin-bottom: 2rem;
            padding: 1.5rem;
            background-color:#FFF5F5;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .form-group label {
            font-weight: 600;
            color: #5D4037;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .form-group input {
            padding: 0.8rem 1.2rem;
            border: 2px solid #FFD1DC;
            border-radius: 50px;
            font-size: 1rem;
            outline: none;
            transition: border-color 0.3s ease;
        }

        .form-group input:focus {
            border-color: #e179bfd9;
        }

        .auth-form .btn {
            margin-top: 1rem;
            justify-content: center;
        }

        .auth-links {
            text-align: center;
            margin-top: 1.5rem;
            color: #5D4037;
        }

        .auth-links a {
            color: #e179bfd9;
            text-decoration: none;
            font-weight: 600;
            transition: color 0.3s ease;
        }

        .auth-links a:hover {
            color: #5D4037;
            text-decoration: underline;
        }

        /* Success and error messages */
        .success-message, .error-message {
            padding: 1rem;
            border-radius: 10px;
            margin-top: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 500;
            animation: fadeIn 0.3s ease;
        }

        .success-message {
            background-color: #E8F5E9;
            color: #2E7D32;
            border: 1px solid #A5D6A7;
        }

        .error-message {
            background-color: #FFEBEE;
            color: #C62828;
            border: 1px solid #FFCDD2;
        }

        /* Admin Dashboard specific styles */
        .admin-container {
            max-width: 1200px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 20px;
            border: 3px dashed #FFD1DC;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            padding: 2rem;
            margin: 3rem auto;
            width: 90%;
        }

        .admin-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .admin-header h1 {
            font-size: 2rem;
            color: #e179bfd9;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .admin-header p {
            color: #5D4037;
            font-size: 1.1rem;
        }

        .admin-section {
            margin-bottom: 2rem;
            padding: 1.5rem;
            background-color: #FFF;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }

        .admin-form {
            width: 1000px;
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
            margin-bottom: 2rem;
            padding: 1.5rem;
            background-color: #FFF5F5;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }

        .admin-form h3 {
            
            font-size: 1.5rem;
            color: #5D4037;
            margin-bottom: 1rem;
            border-bottom: 2px dashed #FFD1DC;
            padding-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .admin-list h3 {
            font-size: 1.5rem;
            color: #5D4037;
            margin: 1.5rem 0 1rem;
            border-bottom: 2px dashed #FFD1DC;
            padding-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .admin-item {
            padding: 1rem;
            background-color: #FFF;
            border-radius: 10px;
            margin-bottom: 1rem;
            border: 1px solid #FFD1DC;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
        }

        .admin-item h3 {
            color: #e179bfd9;
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
            border: none;
        }

        .admin-item p {
            margin-bottom: 0.5rem;
            color: #5D4037;
        }

        .admin-item .btn {
            margin-top: 0.5rem;
        }

        textarea {
            padding: 0.8rem 1.2rem;
            border: 2px solid #FFD1DC;
            border-radius: 15px;
            font-size: 1rem;
            resize: vertical;
            min-height: 120px;
            outline: none;
            transition: border-color 0.3s ease;
            font-family: 'Poppins', sans-serif;
        }

        textarea:focus {
            border-color: #e179bfd9;
        }

        select {
            padding: 0.8rem 1.2rem;
            border: 2px solid #FFD1DC;
            border-radius: 50px;
            font-size: 1rem;
            outline: none;
            transition: border-color 0.3s ease;
            background-color: white;
            cursor: pointer;
        }

        select:focus {
            border-color: #e179bfd9;
        }

        /* Footer styling */
        footer {
            background-color: #e179bfd9;
            margin-top: 3rem;
        }

        .footerContainer {
            height: 150%;
            width: 100%;
            padding: 70px 30px 20px;
        }

        .footerBottom {
            background-color: #e179bfd9;
            padding: 20px;
            text-align: center;
            font-size: large;
            font-weight: 600;
        }

        .footerBottom p {
            color: white;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .header {
                height: auto;
                padding: 1rem 0;
            }

            .header-content {
                flex-direction: column;
                gap: 1rem;
            }

            .nav-links {
                width: 100%;
                justify-content: center;
                margin-top: 1rem;
            }

            .admin-container {
                width: 95%;
                padding: 1.5rem;
            }

            .admin-form, .admin-item {
                padding: 1rem;
            }
        }

        /* Loading indicator styles */
        .loading-indicator {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 3rem;
            gap: 1rem;
        }

        .loading-spinner {
            width: 50px;
            height: 50px;
            border: 5px solid #FFD1DC;
            border-top: 5px solid #e179bfd9;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="container header-content">
            <a href="/" class="logo">
                <i class="fas fa-book-open"></i> Recipe Manager Admin
            </a>
            <nav class="nav-links">
                <button onclick="location.href='recipes.html'" class="btn btn-secondary">
                    <i class="fas fa-book"></i> View Recipes
                </button>
                <button onclick="logout()" class="btn btn-secondary">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </button>
            </nav>
        </div>
    </header>

    <div class="container admin-container">
        <div class="admin-header">
            <h1><i class="fas fa-cog"></i> Admin Dashboard</h1>
            <p>Manage recipes</p>
        </div>

        

        <section id="recipesSection" class="admin-section">
            <form id="addRecipeForm" class="admin-form">
                <h3><i class="fas fa-plus-circle"></i> Add New Recipe</h3>
                <div class="form-group">
                    <label for="title">Title:</label>
                    <input type="text" id="title" required>
                </div>
                <div class="form-group">
                    <label for="category">Category:</label>
                    <select id="category" required>
                        <option value="breakfast">Breakfast</option>
                        <option value="lunch">Lunch</option>
                        <option value="dinner">Dinner</option>
                        <option value="dessert">Dessert</option>
                        <option value="drinks">Drinks</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="ingredients">Ingredients:</label>
                    <textarea id="ingredients" required></textarea>
                </div>
                <div class="form-group">
                    <label for="instructions">Instructions:</label>
                    <textarea id="instructions" required></textarea>
                </div>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Add Recipe
                </button>
            </form>
            <div id="recipeList" class="admin-list"></div>
        </section>
    </div>

    <script>
        function showSection(section) {
            document.getElementById('recipesSection').style.display = 'block';
            document.getElementById('recipesTab').classList.add('active');
            loadRecipes();
        }

        async function loadRecipes() {
            try {
                const response = await fetch('/api/recipes'); 
                
                if (!response.ok) {
                    throw new Error(`Ошибка: ${response.status} ${response.statusText}`);
                }
                
                const recipes = await response.json();
                const recipeList = document.getElementById('recipeList');
                recipeList.innerHTML = '<h3><i class="fas fa-list"></i> Current Recipes</h3>';
                
                if (recipes.length === 0) {
                    recipeList.innerHTML += '<p>No recipes found.</p>';
                    return;
                }
                
                recipes.forEach(recipe => {
                    const recipeItem = document.createElement('div');
                    recipeItem.className = 'admin-item';
                    recipeItem.innerHTML = `
                        <h3>${recipe.title}</h3>
                        <p><strong>Category:</strong> ${recipe.category}</p>
                        <p><strong>Ingredients:</strong> ${recipe.ingredients.substring(0, 100)}${recipe.ingredients.length > 100 ? '...' : ''}</p>
                        <p><strong>Instructions:</strong> ${recipe.instructions.substring(0, 100)}${recipe.instructions.length > 100 ? '...' : ''}</p>
                        <button onclick="deleteRecipe('${recipe._id}')" class="btn btn-danger">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    `;
                    recipeList.appendChild(recipeItem);
                });
            } catch (error) {
                console.error('Error loading recipes:', error);
                alert('Failed to load recipes: ' + error.message);
            }
        }

        async function deleteRecipe(recipeId) {
            if (!confirm('Are you sure you want to delete this recipe?')) {
                return;
            }
            
            try {
                const token = localStorage.getItem('token');
                
                if (!token) {
                    throw new Error('Authentication token not found. Please log in again.');
                }
                
                const response = await fetch(`/api/recipes/${recipeId}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    }
                });
                
                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Failed to delete recipe');
                }
                
                alert('Recipe deleted successfully');
                loadRecipes(); 
            } catch (error) {
                console.error('Error deleting recipe:', error);
                alert('Failed to delete recipe: ' + error.message);
            }
        }

        async function addRecipe(event) {
            event.preventDefault();
            
            const title = document.getElementById('title').value.trim();
            const category = document.getElementById('category').value;
            const ingredients = document.getElementById('ingredients').value.trim();
            const instructions = document.getElementById('instructions').value.trim();
            
            if (!title || !ingredients || !instructions) {
                alert('Please fill in all required fields');
                return;
            }
            
            try {
                const token = localStorage.getItem('token');
                
                if (!token) {
                    throw new Error('Authentication token not found. Please log in again.');
                }
                
                const response = await fetch('/api/recipes', {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        title,
                        category,
                        ingredients,
                        instructions
                    })
                });
                
                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Failed to add recipe');
                }
                
                const result = await response.json();
                alert('Recipe added successfully');
                document.getElementById('addRecipeForm').reset();
                loadRecipes(); 
            } catch (error) {
                console.error('Error adding recipe:', error);
                alert('Failed to add recipe: ' + error.message);
            }
        }

        function logout() {
            localStorage.removeItem('token');
            localStorage.removeItem('userEmail');
            localStorage.removeItem('userRole');
            window.location.href = 'login.html';
        }

        document.addEventListener('DOMContentLoaded', () => {
            const userRole = localStorage.getItem('userRole');
            const token = localStorage.getItem('token');

            if (!token || userRole !== 'admin') {
                window.location.href = '/';
                return;
            }

            const addRecipeForm = document.getElementById('addRecipeForm');
            if (addRecipeForm) {
                addRecipeForm.addEventListener('submit', addRecipe);
            } else {
                console.error('Form element not found');
            }
            showSection('recipes');
        });
    </script> 

    <footer>
        <div class="footerBottom">
            <p>Copyright &copy;2025; Designed by Arailym, Zhansaya and Angsar</p>
        </div>
    </footer>  

</body>
</html>